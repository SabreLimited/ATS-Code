function testPluginPass(annotationId){
	//var options  = "?$filter=sabre_data eq '" + annotationId +"'"; 41f57f87-a764-e611-80d1-000d3a013699
	//console.log(annotationId);
	var object = new Object();
	object.sabre_data = annotationId;
	SDK.JQuery.updateRecord(
	  "f3b52c75-fadb-e611-80d2-000d3a013699",
	  object,
	  "sabre_dummy",
	  function(){
		  //
	  },
	  errorFunction
	  );
	
	var options = "$filter=sabre_data eq '" +annotationId +"'";
	SDK.JQuery.retrieveMultipleRecords("sabre_dummy", options, retrieveRCallback, errorFunction, recordsReturned);

}

function retrieveRCallback(retrievedRecords){
	    //console.log(retrievedRecords);
		if (retrievedRecords.length > 0 && retrievedRecords[0].sabre_data != null && window.parent.Xrm.Page.getControl("sabre_resumecontents") != null){
			window.parent.Xrm.Page.getAttribute("sabre_resumecontents").setValue(retrievedRecords[0].sabre_data);
		}
		if (retrievedRecords.length > 0 && retrievedRecords[0].sabre_data2 != null){
			var myClass = eval('(' +retrievedRecords[0].sabre_data2+ ')');
			console.log(myClass);
			//PERFORM ACTIONS ON myClass variable to add Name, Address, Phone, Email, and skills. 
			//MISSING EMAIL AND SKILLS
			if (myClass.StructuredXMLResume != null && myClass.StructuredXMLResume.ContactInfo != null && myClass.StructuredXMLResume.ContactInfo.PersonName != null){
			  setCandidateName(myClass.StructuredXMLResume.ContactInfo.PersonName);
			}
			if(myClass.StructuredXMLResume != null && myClass.StructuredXMLResume.ContactInfo != null){
			  setCandidateAddress(myClass.StructuredXMLResume.ContactInfo);
			}
			if(myClass.StructuredXMLResume != null && myClass.StructuredXMLResume.Qualifications != null){
				setCandidateSkills(myClass.StructuredXMLResume.Qualifications);
			}
			//console.log(retrievedRecords[0].sabre_data2);
		}
		else{
			console.log("Error! Try uploading the file again!");
		}
		//window.parent.Xrm.Page.data.save();
		//window.parent.Xrm.Page.data.refresh();
}

//function called if error found retrieveMultipleRecords Function call
function errorFunction(error){
	alert("error!");
	console.log(error);
}

//function called upon end of function
function recordsReturned(){

}

function setCandidateName(NameData){
	if (NameData.FamilyName != null && window.parent.Xrm.Page.getControl("sabre_lastname")!= null){
		//Set Last Name to NameData.FamilyName;
		window.parent.Xrm.Page.getAttribute("sabre_lastname").setValue(NameData.FamilyName);
		
	}
	if (NameData.GivenName != null && window.parent.Xrm.Page.getControl("sabre_firstsname")!= null){
		//Set Given Name to NameData.GivenName;
		window.parent.Xrm.Page.getAttribute("sabre_firstsname").setValue(NameData.GivenName);
	}
	window.parent.Xrm.Page.data.save(true);
	
}

function setCandidateAddress(AddressData){
	if(AddressData.ContactMethod.length > 0){
		console.log(AddressData.ContactMethod.length);
		console.log(AddressData.ContactMethod[0]);
		for(var i = 0; i < AddressData.ContactMethod.length; i++){
			if(AddressData.ContactMethod[i].PostalAddress != null){
				if(AddressData.ContactMethod[i].PostalAddress.CountryCode != null && window.parent.Xrm.Page.getControl("sabre_country") != null){
					if(AddressData.ContactMethod[i].PostalAddress.CountryCode == "US"){
					window.parent.Xrm.Page.getAttribute("sabre_country").setValue(837770001); //US
					}
					else{
					window.parent.Xrm.Page.getAttribute("sabre_country").setValue(837770000); //CA						
					}					
				}
				if(AddressData.ContactMethod[i].PostalAddress.Municipality != null && window.parent.Xrm.Page.getControl("sabre_addresscity") != null){
					window.parent.Xrm.Page.getAttribute("sabre_addresscity").setValue(AddressData.ContactMethod[i].PostalAddress.Municipality);
				}
				if(AddressData.ContactMethod[i].PostalAddress.DeliveryAddress!= null && AddressData.ContactMethod[i].PostalAddress.DeliveryAddress.AddressLine != null && window.parent.Xrm.Page.getControl("sabre_addressline1") != null){
					window.parent.Xrm.Page.getAttribute("sabre_addressline1").setValue(AddressData.ContactMethod[i].PostalAddress.DeliveryAddress.AddressLine);
				}
				if(AddressData.ContactMethod[i].PostalAddress.PostalCode != null && window.parent.Xrm.Page.getControl("sabre_addresspostalcode") != null){
                    window.parent.Xrm.Page.getAttribute("sabre_addresspostalcode").setValue(AddressData.ContactMethod[i].PostalAddress.PostalCode);
				}
				if(AddressData.ContactMethod[i].PostalAddress.Region != null && window.parent.Xrm.Page.getControl("sabre_usstate") != null && window.parent.Xrm.Page.getControl("sabre_province")){
					
					var upperRegion = AddressData.ContactMethod[i].PostalAddress.Region.toUpperCase();
					if(upperRegion == "ON" || upperRegion == "ONTARIO"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770000);
					}
					else if(upperRegion == "AB" || upperRegion == "ALBERTA"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770003);						
					}
					else if(upperRegion == "BC" || upperRegion == "BRITISH COLUMBIA"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770002);
					}
					else if(upperRegion == "MB" || upperRegion == "MANITOBA"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770004);
					}
					else if(upperRegion == "NL" || upperRegion == "NEWFOUNDLAND AND LABRADOR"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770008);
					}
					else if(upperRegion == "NS" || upperRegion == "NOVA SCOTIA"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770006);
					}
					else if(upperRegion == "NT" || upperRegion == "NORTHWEST TERRITORIES"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770010);
					}
					else if(upperRegion == "NU" || upperRegion == "NUNAVUT"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770012);
					}
					else if(upperRegion == "PE" || upperRegion == "PRINCE EDWARD ISLAND"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770009);
					}
					else if(upperRegion == "QC" || upperRegion == "QUEBEC"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770001);
					}
					else if(upperRegion == "SK" || upperRegion == "SASKATCHEWAN"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770005);
					}
					else if(upperRegion == "YT" || upperRegion == "YUKON"){
						window.parent.Xrm.Page.getAttribute("sabre_province").setValue(837770011);
					}
					else if(upperRegion == "ALABAMA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770000);
					}
					else if(upperRegion == "ALASKA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770001);
					}
					else if(upperRegion == "ARIZONA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770002);
					}
					else if(upperRegion == "ARKANSAS"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770003);
					}
					else if(upperRegion == "CALIFORNIA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770004);
					}
					else if(upperRegion == "COLORADO"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770005);
					}
					else if(upperRegion == "CONNECTICUT"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770006);
					}
					else if(upperRegion == "DELAWARE"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770007);
					}
					else if(upperRegion == "FLORIDA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770008);
					}
					else if(upperRegion == "GEORGIA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770009);
					}
					else if(upperRegion == "HAWAII"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770010);
					}
					else if(upperRegion == "IDAHO"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770011);
					}
					else if(upperRegion == "ILLINOIS"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770012);
					}
					else if(upperRegion == "INDIANA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770013);
					}
					else if(upperRegion == "IOWA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770014);
					}
					else if(upperRegion == "KANSAS"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770015);
					}
					else if(upperRegion == "KENTUCKY"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770016);
					}
					else if(upperRegion == "LOUISIANA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770017);
					}
					else if(upperRegion == "MAINE"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770018);
					}
					else if(upperRegion == "MARYLAND"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770019);
					}
					else if(upperRegion == "MASSACHUSETTS"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770020);
					}
					else if(upperRegion == "MICHIGAN"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770021);
					}
					else if(upperRegion == "MINNESOTA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770022);
					}
					else if(upperRegion == "MISSISSIPPI"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770023);
					}
					else if(upperRegion == "MISSOURI"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770024);
					}
					else if(upperRegion == "MONTANA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770025);
					}
					else if(upperRegion == "NEBRASKA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770026);
					}
					else if(upperRegion == "NEVADA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770027);
					}
					else if(upperRegion == "NEW HAMPSHIRE"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770028);
					}
					else if(upperRegion == "NEW JERSEY"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770029);
					}
					else if(upperRegion == "NEW MEXICO"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770030);
					}
					else if(upperRegion == "NEW YORK"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770031);
					}
					else if(upperRegion == "NORTH CAROLINA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770032);
					}
					else if(upperRegion == "NORTH DAKOTA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770033);
					}
					else if(upperRegion == "OHIO"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770034);
					}
					else if(upperRegion == "OKLAHOMA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770035);
					}
					else if(upperRegion == "OREGON"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770036);
					}
					else if(upperRegion == "PENNSYLVANIA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770037);
					}
					else if(upperRegion == "RHODE ISLAND"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770038);
					}
					else if(upperRegion == "SOUTH CAROLINA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770039);
					}
					else if(upperRegion == "SOUTH DAKOTA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770040);
					}
					else if(upperRegion == "TENNESSEE"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770041);
					}
					else if(upperRegion == "TEXAS"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770042);
					}
					else if(upperRegion == "UTAH"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770043);
					}
					else if(upperRegion == "VERMONT"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770044);
					}
					else if(upperRegion == "VIRGINIA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770045);
					}
					else if(upperRegion == "WASHINGTON"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770046);
					}
					else if(upperRegion == "WEST VIRGINIA"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770047);
					}
					else if(upperRegion == "WISCONSIN"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770048);
					}
					else if(upperRegion == "WYOMING"){
						window.parent.Xrm.Page.getAttribute("sabre_usstate").setValue(837770049);
					}
					
					
				}
				
			}
			if(AddressData.ContactMethod[i].InternetEmailAddress != null && window.parent.Xrm.Page.getControl("sabre_emailaddress") != null){
				window.parent.Xrm.Page.getAttribute("sabre_emailaddress").setValue(AddressData.ContactMethod[i].InternetEmailAddress);
			}
			if(AddressData.ContactMethod[i].Mobile != null && AddressData.ContactMethod[i].Mobile.FormattedNumber != null && window.parent.Xrm.Page.getControl("sabre_cellphone") != null){
				window.parent.Xrm.Page.getAttribute("sabre_cellphone").setValue(AddressData.ContactMethod[i].Mobile.FormattedNumber);
			}
			if(AddressData.ContactMethod[i].Telephone != null && AddressData.ContactMethod[i].Telephone.FormattedNumber != null && window.parent.Xrm.Page.getControl("sabre_homephone") != null){
				window.parent.Xrm.Page.getAttribute("sabre_homephone").setValue(AddressData.ContactMethod[i].Telephone.FormattedNumber);
			}
		}
		if(window.parent.Xrm.Page.getControl("sabre_homephone") != null && window.parent.Xrm.Page.getControl("sabre_cellphone") != null){
			if(window.parent.Xrm.Page.getAttribute("sabre_cellphone").getValue() == null && window.parent.Xrm.Page.getAttribute("sabre_homephone").getValue() != null){
				window.parent.Xrm.Page.getAttribute("sabre_cellphone").setValue(window.parent.Xrm.Page.getAttribute("sabre_homephone").getValue());
				window.parent.Xrm.Page.getAttribute("sabre_homephone").setValue(null);
			}
		}
	}
}

function setCandidateSkills(skillsData){
	if(skillsData.Competency.length > 0){
		qualifications = skillsData;
		var skillName = skillsData.Competency[0].CompetencyEvidence.name;
		var filterContents = "$filter=sabre_name eq '" +skillName+ "'";
		for(var i = 1; i < skillsData.Competency.length; i++){
			skillName = skillsData.Competency[i].CompetencyEvidence.name;

			filterContents = filterContents + " or sabre_name eq '" +skillName+ "'";
        }
		//console.log("going to retrieve");
        skillResult = new Array();		
		SDK.JQuery.retrieveMultipleRecords(
		  "sabre_skills",
		  filterContents,
		  returnResults,
		  errorFunction,
		  skillFinal
		);

		
	}
}

function skillFinal(){
	for (var i = 0; i < qualifications.Competency.length; i++){
			for(var j = 0; j<qualifications.Competency.length; j++){
			    if(qualifications.Competency[i].CompetencyEvidence != null && qualifications.Competency[i].CompetencyEvidence.name != null){
				    if(qualifications.Competency[j].CompetencyEvidence != null && qualifications.Competency[j].CompetencyEvidence.name != null){
                        if(qualifications.Competency[i].CompetencyEvidence.name == qualifications.Competency[j].CompetencyEvidence.name && i != j){
							qualifications.Competency.splice(i, 1);
							if(i>0){
								i--;
							}
							if(j>0){
								j--;
							}
						}						
					}	
                }
			}
		}
	
	
	needConnectionTo = new Array();
	if(skillResult != null && skillResult.length > 0){
		//create connection between resulting object and current Candidate
		//console.log(skillResult);
		for(var j = 0; j<qualifications.Competency.length; j++){
			var duplicate = -1;
			for (var i = 0; i<skillResult.length; i++){
				if(skillResult[i].sabre_name != null && qualifications.Competency[j].CompetencyEvidence != null && qualifications.Competency[j].CompetencyEvidence.name != null && skillResult[i].sabre_name == qualifications.Competency[j].CompetencyEvidence.name){
				  duplicate = i;
				  //console.log(skillResult[j].sabre_name);
				}
			}
			if(duplicate == -1){
				var skillObject = new Object();
				skillObject.sabre_name = qualifications.Competency[j].CompetencyEvidence.name;
				//console.log(skillObject.sabre_name);
				SDK.JQuery.createRecord(
				  skillObject,
				  "sabre_skills",
				  returnNewSkill,
				  errorFunction
				);
			}
			else{
				
				newSkill = new Array();
				newSkill[0] = skillResult[duplicate];
				newSkill[1] = 0;
				needConnectionTo.push(newSkill);
				var windowId = window.parent.Xrm.Page.data.entity.getId();
				windowId = windowId.slice(1, -1);
				//var filterValues = "$filter=Record1Id eq '" + skillResult[duplicate].sabre_skillsId + "' and Record2Id eq '" + windowId + "'";
				var filterValues = "$filter=Record1Id/Id eq guid'" + skillResult[duplicate].sabre_skillsId + "' and Record2Id/Id eq guid'"+ windowId +"'";
				
				SDK.JQuery.retrieveMultipleRecords(
				    "Connection",
				    filterValues,
		            foundConnections,
		            errorFunction,
		            function(skillResult){

					}
				);  
				//check if there is a preexisting conenction between Skill and Candidate
				//if there is do nothing, else create connection.
			}
		}
	}
	else{
		
		for(var i = 0; i < qualifications.Competency.length; i++){
			if(qualifications.Competency[i].CompetencyEvidence != null && qualifications.Competency[i].CompetencyEvidence.name != null){

				//create skill object
				var skillObject = new Object();
				skillObject.sabre_name = qualifications.Competency[i].CompetencyEvidence.name;
				
				SDK.JQuery.createRecord(
				  skillObject,
				  "sabre_skills",
				  returnNewSkill,
				  errorFunction
				);
					//within return value of skill object creation, manufacture connection between object and Candidate.
			}
		}
	}
}

function returnResults(results){
    
	for (var i = 0; i<results.length; i++){
	    skillResult.push(results[i]);
	}

}

function outputRes(results){
	//console.log(results);
}

function returnNewSkill(result){
	var connectionObject = new Object();
	connectionObject.Name = "Skill-Candidate Parser created connection";
	var skillObjRole = new Object();
	var candidateObjRole = new Object();
	var skillObj = new Object();
	var candidateObj = new Object();
	skillObj.LogicalName = "sabre_skills";
	skillObj.Id = result.sabre_skillsId;
	candidateObj.LogicalName = "sabre_candidate";
	candidateObj.Id = window.parent.Xrm.Page.data.entity.getId();
	candidateObj.Id = candidateObj.Id.slice(1, -1);
	candidateObjRole.LogicalName = "connectionrole";
	candidateObjRole.Id = "20872a5f-a4fc-e511-80cd-000d3a013699";
	skillObjRole.LogicalName = "connectionrole";
	skillObjRole.Id = "4243c146-a4fc-e511-80cd-000d3a013699";
	connectionObject.Record1Id = skillObj;
	connectionObject.Record1RoleId = skillObjRole;
	connectionObject.Record2Id = candidateObj;
	SDK.JQuery.createRecord(
	  connectionObject,
	  "Connection",	
	  function(result){
		  //console.log(result);
	  },
	  errorFunction
	);
}

function foundConnections(results){
	//connection found, do nothing
	var i = 0;
	while (needConnectionTo[i][1] != 0){
		i++;
	}
	if (results != null && results.length > 0){


	}
	else{ //no connection, MAKE ONE
		///How do I know what skill to create?
		//console.log("foundnoConenction");
		//console.log(results)
		//console.log(needConnectionTo[i][0]);
		
		var connectionObject = new Object();
		connectionObject.Name = "Skill-Candidate Parser created connection";
		var skillObjRole = new Object();
		var candidateObjRole = new Object();
		var skillObj = new Object();
		var candidateObj = new Object();
		skillObj.LogicalName = "sabre_skills";
		skillObj.Id = needConnectionTo[i][0].sabre_skillsId;
		candidateObj.LogicalName = "sabre_candidate";
		candidateObj.Id = window.parent.Xrm.Page.data.entity.getId();
		candidateObj.Id = candidateObj.Id.slice(1, -1);
		candidateObjRole.LogicalName = "connectionrole";
		candidateObjRole.Id = "20872a5f-a4fc-e511-80cd-000d3a013699";
		skillObjRole.LogicalName = "connectionrole";
		skillObjRole.Id = "4243c146-a4fc-e511-80cd-000d3a013699";
		connectionObject.Record1Id = skillObj;
		connectionObject.Record1RoleId = skillObjRole;
		connectionObject.Record2Id = candidateObj;
		SDK.JQuery.createRecord(
		  connectionObject,
		  "Connection",	
		  function(result){
			  //console.log(result);
		  },
		  errorFunction
		);
		
        
	}
	needConnectionTo[i][1] = 1;
}